@page "/prestamo"
@page "/prestamo/{PrestamoId:int}"

@inject PersonasBLL PersonasBLL
@inject NotificationService notificationService
@inject OcupacionesBLL ocupacionBLL
@inject PrestamosBLL PrestamosBLL


<EditForm Model="prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Prestamos</h3>
             <div style="float:right">
                <td><a href="/prestamos"><h6>Ir a Consulta de Prestamos</h6></a></td>
            </div> 
        </div>
        <div class="card-body">
            <form>
                @*PrestamosId*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="mb-3">
                            <label>PrestamosId</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="prestamo.PrestamosId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                        <i class="oi oi-magnifying-glass" /> Buscar                      
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                @*FechaPrestamo*@
                <div class="mb-3">
                    <label>Fecha de Inicio</label>
                    <InputDate readonly="true" @bind-Value="prestamo.FechaPrestamo"
                                 class="form-control" />
                 <ValidationMessage For="@(() => prestamo.FechaPrestamo)" />
                </div>
                 @*FechaVence*@
                <div class="mb-3">
                    <label>Fecha De Vencimiento</label>
                    <InputDate @bind-Value="prestamo.FechaVence"
                        class="form-control" />
                 <ValidationMessage For="@(() => prestamo.FechaVence)" />
                </div>

                @*Concepto*@
                <div class="mb-3">
                    <label>Concepto</label>
                    <InputText @bind-Value="prestamo.Concepto"
                                 class="form-control" />
                    <ValidationMessage For="@(() => prestamo.Concepto)" />
                </div>
    
               @*Monto*@
            <div class="mb-3">
                <label>Monto</label>
                <InputNumber @bind-Value="prestamo.Monto" class="form-control" />
                <ValidationMessage For="@(() => prestamo.Monto)" />
            </div>
               @*Balance*@
            <div class="mb-3">
                <label> Balance</label>
                <InputNumber @bind-Value="prestamo.Balance" class="form-control" />
                <ValidationMessage For="@(() => prestamo.Balance)" />
            </div>
                <div class="mb-3 col">
                    <label >PersonaId</label>
                    <InputSelect class="form-select" @bind-Value="prestamo.PersonaId">
                        @foreach (Personas prestamo in listas)
                        {
                            <option value="@prestamo.PersonaId">@prestamo.Nombres (ID: @prestamo.PersonaId)</option>
                        }
                    </InputSelect>
                </div>

            </form>
        </div>
        <div class="card-footer">
            <div class="mb-3 text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <i class="oi oi-file" /> Nuevo                
                </button>
                <button type="submit" class="btn btn-lg btn-success" >
                      <i class="oi oi-document" /> Guardar
                </button>
                    <button type="submit" class="btn btn-lg btn-warning" @onclick="Editar">
                   <i class="oi oi-pencil" /> Editar
                </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                   <i class="oi oi-trash" /> Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PrestamoId { get; set; }
    
    public Prestamo prestamo { get; set; } = new Prestamo();

    public String mensaje { get; set; } = "";
  
    public List<Personas> listas { get; set; } = new List<Personas>();

   

    protected override void OnInitialized()
    {
        if (PrestamoId > 0)
        {
            this.prestamo.PrestamosId = PrestamoId;
            this.Buscar();
        }
        listas = PersonasBLL.GetList(o => true);
        prestamo.FechaPrestamo = DateTime.Now;
    }

    public void Nuevo()
    {
        mensaje = "";
        prestamo = new Prestamo();
    }

    bool Validar()
    {
        return true;
    }

    public void Guardar()
    {
        bool guardo;
        
        if (!Validar())
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "No Guardo"
            });
            return;
        }
        guardo = PrestamosBLL.Guardar(prestamo);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            
            Nuevo();
            
        }
        
    }
    private void Buscar()
    {
        if (prestamo.PrestamosId > 0)
        {
            var encontrado = PrestamosBLL.Buscar(prestamo.PrestamosId);

            if (encontrado != null)
                this.prestamo = encontrado;
            
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PrestamosBLL.Eliminar(prestamo);

        if (elimino)
        {   
             ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Eliminado"
            });
            
            Nuevo();
            
        }
        
    }

    public  void Editar()
    {   
        bool editar;
        editar = PrestamosBLL.Editar(prestamo);

        if (editar){
             ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "Editado"
            });
            Nuevo();   
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }
}
